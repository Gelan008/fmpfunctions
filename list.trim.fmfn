/*
=====================================================
list.trim( values )

RETURNS:        (list) trimmed version of the list
DEPENDENCIES:    
VERSION:        1.0
AUTHOR:         See notes
NOTES:          Compliments http://www.briandunning.com/cf/904

=====================================================
*/

Let([
    var.cleaned = Substitute( values; [ " "; "" ]; [ " "; "" ]; [ "	"; "" ]; [ "Â¶"; "" ] ); // Text minus specified chars
    var.char.first = Position( values; Left( var.cleaned; 1 ); 0; 1 ); // Position of firt non cleaned char
    var.char.last = Position( values; Right( var.cleaned; 1 ); Length( values ); -1 ) // Position of last non cleaned char
  ];
    
  Case( var.char.first; Middle( values; var.char.first; var.char.last - var.char.first + 1 ) )


)